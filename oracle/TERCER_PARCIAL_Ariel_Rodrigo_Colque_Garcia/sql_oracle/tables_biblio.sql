/*CREAR TABLAS PARA BIBLIO_TECH*/

-- USUARIO, CASO DE ESPECIALIZACION/GENERALIZACION
CREATE TABLE USUARIO (
    ID_USUARIO CHAR(10) CONSTRAINT PK_usuario_id PRIMARY KEY,
    NOMBRES VARCHAR(50) NOT NULL,
    APELLIDOS VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL CONSTRAINT UK_usuario_email UNIQUE,
    FECHA_REGISTRO DATE NOT NULL
);

CREATE TABLE ESTUDIANTE (
    ID_ESTUDIANTE CHAR(10) NOT NULL CONSTRAINT PK_estudiante_id PRIMARY KEY,
    CARRERA VARCHAR(50) NOT NULL,
    CU CHAR(10) NOT NULL CONSTRAINT UK_estudiante_cu UNIQUE,
    CONSTRAINT FK_usuario_estudiante FOREIGN KEY (ID_ESTUDIANTE) REFERENCES USUARIO(ID_USUARIO)
);

CREATE TABLE PROFESOR (
    ID_PROFESOR CHAR(10) NOT NULL CONSTRAINT PK_profesor_id PRIMARY KEY,
    TITULO_ACADEMICO VARCHAR(50) NOT NULL,
    CONSTRAINT FK_usuario_profesor FOREIGN KEY (ID_PROFESOR) REFERENCES USUARIO(ID_USUARIO)
);


-- TARJETA DE LA BIBLIOTECA PARA CADA USUARIO

CREATE TABLE TARJETA_BIBLIOTECA (
    ID_TARJETA CHAR(10) NOT NULL CONSTRAINT PK_tarjeta_id PRIMARY KEY,
    FECHA_EXPEDICION DATE NOT NULL,
    FECHA_EXPIRACION DATE NOT NULL,
    CONSTRAINT FK_usuario_tarjeta FOREIGN KEY (ID_TARJETA) REFERENCES USUARIO(ID_USUARIO)
);

SELECT * FROM TARJETA_BIBLIOTECA;

-- CATEGORIA

CREATE TABLE CATEGORIA (
    ID_CATEGORIA NUMBER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT PK_categoria_id PRIMARY KEY,
    NOMBRE VARCHAR(50) NOT NULL,
    DESCRIPCION VARCHAR(100) NOT NULL
);

CREATE INDEX idx_categoria_nombre ON CATEGORIA (NOMBRE);

SELECT index_name, table_name
FROM user_indexes;

-- LIBRO, CASO DE ESPECIALIZACION/GENERALIZACION

CREATE TABLE LIBRO (
    ISBN CHAR(13) CONSTRAINT PK_libro_isbn PRIMARY KEY,
    ID_CATEGORIA NUMBER NOT NULL,
    TITULO VARCHAR(100) NOT NULL,
    EDITORIAL VARCHAR(50) NOT NULL,
    FECHA_PUBLICACION DATE NOT NULL,
    EJEMPLARES_DISPONIBLES NUMBER NOT NULL,
    CONSTRAINT FK_categoria_libro FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA)
);

CREATE TABLE LIBRO_DIGITAL (
    ISBN_DIGITAL CHAR(13) NOT NULL CONSTRAINT PK_libro_digital_isbn PRIMARY KEY,
    FORMATO CHAR(10) NOT NULL,
    ENLACE_DESCARGAR VARCHAR(100) NOT NULL,
    CONSTRAINT FK_libro_digital FOREIGN KEY (ISBN_DIGITAL) REFERENCES LIBRO(ISBN)
);

CREATE TABLE LIBRO_FISICO (
    ISBN_FISICO CHAR(13) CONSTRAINT PK_libro_fisico_isbn PRIMARY KEY,
    UBICACION_ESTANTERIA VARCHAR(50) NOT NULL,
    CONSTRAINT FK_libro_fisico FOREIGN KEY (ISBN_FISICO) REFERENCES LIBRO(ISBN)
);

-- AUTOR

CREATE TABLE AUTOR (
    ID_AUTOR CHAR(10) CONSTRAINT PK_autor_id PRIMARY KEY,
    NOMBRES VARCHAR(50) NOT NULL,
    APELLIDOS VARCHAR(50) NOT NULL
);

-- TABLA TERNARIA ENTRE LIBRO Y AUTOR

CREATE TABLE LIBRO_AUTOR (
    ISBN CHAR(13) NOT NULL,
    ID_AUTOR CHAR(10) NOT NULL,
    ROL_AUTOR VARCHAR(40) NOT NULL,
    CONSTRAINT PK_libro_autor PRIMARY KEY (ISBN, ID_AUTOR),
    CONSTRAINT FK_libro_autor FOREIGN KEY (ISBN) REFERENCES LIBRO(ISBN),
    CONSTRAINT FK_autor_libro FOREIGN KEY (ID_AUTOR) REFERENCES AUTOR(ID_AUTOR)
);

-- TABLA EMPLEADO
CREATE TABLE EMPLEADO (
    ID_EMPLEADO CHAR(10) CONSTRAINT PK_empleado_id PRIMARY KEY,
    NOMBRES VARCHAR(50) NOT NULL,
    APELLIDOS VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL CONSTRAINT UK_empleado_email UNIQUE,
    CARGO VARCHAR(20) NOT NULL
);


-- CASO AGREGACION/COMPOCISION QUE AGREGA UN LIBRO FISICO Y EL PRESTAMO A UN USUARIO

CREATE TABLE PRESTAMO (
    ID_USUARIO CHAR(10) NOT NULL,
    ISBN CHAR(13) NOT NULL,
    ID_EMPLEADO CHAR(10) NOT NULL,
    FECHA_PRESTAMO DATE NOT NULL,
    FECHA_DEVOLUCION DATE DEFAULT NULL,
    CONSTRAINT PK_prestamo PRIMARY KEY (ID_USUARIO, ISBN),
    CONSTRAINT FK_usuario_prestamo FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    CONSTRAINT FK_libro_prestamo FOREIGN KEY (ISBN) REFERENCES LIBRO(ISBN),
    CONSTRAINT FK_empleado_prestamo FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO)
);

SELECT * FROM PRESTAMO;

DELETE FROM PRESTAMO;
DROP TABLE HISTORIAL_TRANSACCION;

-- TABLA HISTORIAL TRANSACCION PARA AUDITORIA DE LA BD

CREATE TABLE HISTORIAL_TRANSACCION (
    ID_TRANSACCION NUMBER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT PK_transaccion_id PRIMARY KEY,
    FECHA_TRANSACCION DATE NOT NULL,
    TIPO_TRANSACCION VARCHAR(20) NOT NULL,
    ID_USUARIO CHAR(10) NOT NULL,
    ISBN CHAR(13) DEFAULT NULL,
    ID_EMPLEADO CHAR(10) DEFAULT NULL,
    CONSTRAINT FK_prestamo_transaccion FOREIGN KEY (ID_USUARIO, ISBN) REFERENCES PRESTAMO(ID_USUARIO, ISBN)
);

SELECT * FROM HISTORIAL_TRANSACCION;


-- TABLA MULTAS
CREATE TABLE MULTA (
    ID_MULTA NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ID_USUARIO CHAR(10) NOT NULL,
    ISBN CHAR(13) NOT NULL,
    FECHA_MULTA DATE NOT NULL,
    MONTO NUMBER(6, 2) NOT NULL,
    TIPO_USUARIO VARCHAR(20) NOT NULL,
    DIAS_RETRASO NUMBER NOT NULL,
    MULTA_DIA NUMBER(6, 2) NOT NULL,
    CONSTRAINT FK_prestamo_multa FOREIGN KEY (ID_USUARIO, ISBN) REFERENCES PRESTAMO(ID_USUARIO, ISBN)
);



-- INSERCION DE DATOS


-- TABLA USUARIOS
INSERT INTO USUARIO (ID_USUARIO, NOMBRES, APELLIDOS, EMAIL, FECHA_REGISTRO) VALUES
    ('U123456789', 'Juan', 'Perez', 'juan.perez@example.com', TO_DATE('2023-01-15', 'YYYY-MM-DD'));
INSERT INTO USUARIO (ID_USUARIO, NOMBRES, APELLIDOS, EMAIL, FECHA_REGISTRO) VALUES
    ('U987654321', 'Maria', 'Gonzalez', 'maria.gonzalez@example.com', TO_DATE('2023-03-22', 'YYYY-MM-DD'));
INSERT INTO USUARIO (ID_USUARIO, NOMBRES, APELLIDOS, EMAIL, FECHA_REGISTRO) VALUES
    ('U111213141', 'Carlos', 'Lopez', 'carlos.lopez@example.com', TO_DATE('2023-05-10', 'YYYY-MM-DD'));
INSERT INTO USUARIO (ID_USUARIO, NOMBRES, APELLIDOS, EMAIL, FECHA_REGISTRO) VALUES
    ('U222333444', 'Ana', 'Martinez', 'ana.martinez@example.com', TO_DATE('2023-06-01', 'YYYY-MM-DD'));
INSERT INTO USUARIO (ID_USUARIO, NOMBRES, APELLIDOS, EMAIL, FECHA_REGISTRO) VALUES
    ('U555666777', 'Luis', 'Rodriguez', 'luis.rodriguez@example.com', TO_DATE('2023-07-18', 'YYYY-MM-DD'));
INSERT INTO USUARIO (ID_USUARIO, NOMBRES, APELLIDOS, EMAIL, FECHA_REGISTRO) VALUES
    ('U666777888', 'Elena', 'Ramirez', 'elena.ramirez@example.com', TO_DATE('2023-08-05', 'YYYY-MM-DD'));
INSERT INTO USUARIO (ID_USUARIO, NOMBRES, APELLIDOS, EMAIL, FECHA_REGISTRO) VALUES
    ('U777888999', 'Pablo', 'Vargas', 'pablo.vargas@example.com', TO_DATE('2023-09-12', 'YYYY-MM-DD'));
INSERT INTO USUARIO (ID_USUARIO, NOMBRES, APELLIDOS, EMAIL, FECHA_REGISTRO) VALUES
    ('U888999000', 'Laura', 'Fernandez', 'laura.fernandez@example.com', TO_DATE('2023-10-20', 'YYYY-MM-DD'));

INSERT INTO USUARIO (ID_USUARIO, NOMBRES, APELLIDOS, EMAIL, FECHA_REGISTRO) VALUES
    ('U999888555', 'Alejandro', 'Gomez', 'alejandro.gomez@example.com', TO_DATE('2024-05-15', 'YYYY-MM-DD'));

SELECT * FROM USUARIO;

-- REGISTRO ESTUDIANTE
INSERT INTO ESTUDIANTE (ID_ESTUDIANTE, CARRERA, CU) VALUES
    ('U123456789', 'Ingeniería Informática', 'CU123456');
INSERT INTO ESTUDIANTE (ID_ESTUDIANTE, CARRERA, CU) VALUES
    ('U987654321', 'Ingeniería de Sistemas', 'CU654321');
INSERT INTO ESTUDIANTE (ID_ESTUDIANTE, CARRERA, CU) VALUES
    ('U222333444', 'Ingeniería Electrónica', 'CU789012');
INSERT INTO ESTUDIANTE (ID_ESTUDIANTE, CARRERA, CU) VALUES
    ('U555666777', 'Ingeniería Industrial', 'CU345678');
INSERT INTO ESTUDIANTE (ID_ESTUDIANTE, CARRERA, CU) VALUES
    ('U666777888', 'Ingeniería Mecatrónica', 'CU901234');

SELECT * FROM ESTUDIANTE;

-- REGISTROS PROFESOR
INSERT INTO PROFESOR (ID_PROFESOR, TITULO_ACADEMICO) VALUES
    ('U111213141', 'Doctorado en Ciencias de la Computación');
INSERT INTO PROFESOR (ID_PROFESOR, TITULO_ACADEMICO) VALUES
    ('U777888999', 'Master en Ingeniería de Software');
INSERT INTO PROFESOR (ID_PROFESOR, TITULO_ACADEMICO) VALUES
    ('U888999000', 'PhD en Redes y Telecomunicaciones');

SELECT * FROM PROFESOR;

-- TABLA CATEGORIA
INSERT INTO CATEGORIA (NOMBRE, DESCRIPCION) VALUES
    ('Desarrollo Web', 'Libros relacionados con el diseño y desarrollo de sitios web.');
INSERT INTO CATEGORIA (NOMBRE, DESCRIPCION) VALUES
    ('Ingeniería de Software', 'Libros sobre principios, metodologías y prácticas de ingeniería de software.');
INSERT INTO CATEGORIA (NOMBRE, DESCRIPCION) VALUES
    ('Inteligencia Artificial', 'Libros sobre inteligencia artificial, aprendizaje automático y redes neuronales.');
INSERT INTO CATEGORIA (NOMBRE, DESCRIPCION) VALUES
    ('Automatización Industrial', 'Libros sobre control de procesos industriales y sistemas automatizados.');
INSERT INTO CATEGORIA (NOMBRE, DESCRIPCION) VALUES
    ('Sistemas Mecatrónicos', 'Libros sobre integración de sistemas mecánicos, eléctricos y de control en mecatrónica.');

SELECT * FROM CATEGORIA;

-- REGISTRO DE DATOS LIBROS
INSERT INTO LIBRO (ISBN, ID_CATEGORIA, TITULO, EDITORIAL, FECHA_PUBLICACION, EJEMPLARES_DISPONIBLES)
VALUES ('9781234567890', 1, 'Desarrollo Web para principiantes', 'Editorial A', TO_DATE('2020-01-01', 'YYYY-MM-DD'), 10);

INSERT INTO LIBRO (ISBN, ID_CATEGORIA, TITULO, EDITORIAL, FECHA_PUBLICACION, EJEMPLARES_DISPONIBLES)
VALUES ('9781234567891', 2, 'Ingeniería de Software avanzada', 'Editorial B', TO_DATE('2019-01-01', 'YYYY-MM-DD'), 5);

INSERT INTO LIBRO (ISBN, ID_CATEGORIA, TITULO, EDITORIAL, FECHA_PUBLICACION, EJEMPLARES_DISPONIBLES)
VALUES ('9781234567892', 3, 'Introducción a la Inteligencia Artificial', 'Editorial C', TO_DATE('2021-01-01', 'YYYY-MM-DD'), 8);

INSERT INTO LIBRO (ISBN, ID_CATEGORIA, TITULO, EDITORIAL, FECHA_PUBLICACION, EJEMPLARES_DISPONIBLES)
VALUES ('9781234567893', 4, 'Automatización Industrial para principiantes', 'Editorial D', TO_DATE('2022-01-01', 'YYYY-MM-DD'), 7);

INSERT INTO LIBRO (ISBN, ID_CATEGORIA, TITULO, EDITORIAL, FECHA_PUBLICACION, EJEMPLARES_DISPONIBLES)
VALUES ('9781234567894', 5, 'Sistemas Mecatrónicos avanzados', 'Editorial E', TO_DATE('2023-01-01', 'YYYY-MM-DD'), 6);

INSERT INTO LIBRO (ISBN, ID_CATEGORIA, TITULO, EDITORIAL, FECHA_PUBLICACION, EJEMPLARES_DISPONIBLES)
VALUES ('9781234567895', 1, 'Desarrollo Web avanzado', 'Editorial F', TO_DATE('2024-01-01', 'YYYY-MM-DD'), 9);

SELECT * FROM LIBRO;


-- Insertando registros en la tabla LIBRO_DIGITAL
INSERT INTO LIBRO_DIGITAL (ISBN_DIGITAL, FORMATO, ENLACE_DESCARGAR)
VALUES ('9781234567890', 'PDF', 'https://example.com/libro1.pdf');

INSERT INTO LIBRO_DIGITAL (ISBN_DIGITAL, FORMATO, ENLACE_DESCARGAR)
VALUES ('9781234567891', 'EPUB', 'https://example.com/libro2.epub');

INSERT INTO LIBRO_DIGITAL (ISBN_DIGITAL, FORMATO, ENLACE_DESCARGAR)
VALUES ('9781234567892', 'MOBI', 'https://example.com/libro3.mobi');

SELECT * FROM LIBRO_DIGITAL;

-- Insertando registros en la tabla LIBRO_FISICO
INSERT INTO LIBRO_FISICO (ISBN_FISICO, UBICACION_ESTANTERIA)
VALUES ('9781234567893', 'Estante 1, Fila 2');

INSERT INTO LIBRO_FISICO (ISBN_FISICO, UBICACION_ESTANTERIA)
VALUES ('9781234567894', 'Estante 2, Fila 3');

INSERT INTO LIBRO_FISICO (ISBN_FISICO, UBICACION_ESTANTERIA)
VALUES ('9781234567895', 'Estante 3, Fila 1');

SELECT * FROM LIBRO_FISICO;

-- DATOS PARA LA TABLA EMPLEADO
INSERT INTO EMPLEADO (ID_EMPLEADO, NOMBRES, APELLIDOS, EMAIL, CARGO)
VALUES ('E123456789', 'Juan', 'Pérez', 'juan.perez@biblioteca.com', 'Bibliotecario');

INSERT INTO EMPLEADO (ID_EMPLEADO, NOMBRES, APELLIDOS, EMAIL, CARGO)
VALUES ('E987654321', 'María', 'González', 'maria.gonzalez@biblioteca.com', 'Bibliotecario');

SELECT * FROM EMPLEADO;

-- DATOS PARA LA TABLA AUTOR
INSERT INTO AUTOR (ID_AUTOR, NOMBRES, APELLIDOS)
VALUES ('A001', 'Gabriel', 'García Márquez');

INSERT INTO AUTOR (ID_AUTOR, NOMBRES, APELLIDOS)
VALUES ('A002', 'Isabel', 'Allende');

INSERT INTO AUTOR (ID_AUTOR, NOMBRES, APELLIDOS)
VALUES ('A003', 'Mario', 'Vargas Llosa');

INSERT INTO AUTOR (ID_AUTOR, NOMBRES, APELLIDOS)
VALUES ('A004', 'Julio', 'Cortázar');

INSERT INTO AUTOR (ID_AUTOR, NOMBRES, APELLIDOS)
VALUES ('A005', 'Jorge Luis', 'Borges');

INSERT INTO AUTOR (ID_AUTOR, NOMBRES, APELLIDOS)
VALUES ('A006', 'Carlos', 'Fuentes');

SELECT * FROM AUTOR;

-- DATOS PARA LA TABLA TARJETA_BIBLIOTECA
INSERT INTO TARJETA_BIBLIOTECA (ID_TARJETA, FECHA_EXPEDICION, FECHA_EXPIRACION)
SELECT ID_USUARIO, SYSDATE, ADD_MONTHS(SYSDATE, 12) FROM USUARIO;

SELECT * FROM TARJETA_BIBLIOTECA;


